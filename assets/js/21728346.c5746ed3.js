"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[441],{83320:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"    ","params":[],"returns":[],"function_type":"method","source":{"line":13,"path":"moonwave/WrapperService.lua"}},{"name":"new","desc":"Creates a wrapped instance.\\n```lua\\nlocal workspace = WrapperService:new(workspace)\\n```","params":[{"name":"instanceToWrap","desc":"","lua_type":"Instance"}],"returns":[{"desc":"","lua_type":"WrappedInstance"}],"function_type":"method","source":{"line":23,"path":"moonwave/WrapperService.lua"}},{"name":"GetWrappedInstance","desc":"Gets a wrapped version of the instance, returns nil if it doesn\'t exist.  \\n```lua\\nWrapperService:new(workspace)\\n\\nlocal workspace = WrapperService:GetWrappedInstance(workspace)\\n```","params":[{"name":"instanceToGet","desc":"","lua_type":"Instance"}],"returns":[{"desc":"","lua_type":"WrappedInstance"}],"function_type":"method","source":{"line":36,"path":"moonwave/WrapperService.lua"}},{"name":"isWrapped","desc":"Returns true if the passed instance is wrapped, false if it\'s not.  \\n```lua  \\nlocal boolean = WrapperService.isWrapped(WrapperService:new(workspace)) -- true\\n```","params":[{"name":"instanceToCheck","desc":"","lua_type":"Instance | WrappedInstance"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":47,"path":"moonwave/WrapperService.lua"}}],"properties":[],"types":[],"name":"WrapperService","desc":"","source":{"line":8,"path":"moonwave/WrapperService.lua"}}')}}]);