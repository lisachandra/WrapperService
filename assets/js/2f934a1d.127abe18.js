"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[927],{95098:function(e){e.exports=JSON.parse('{"functions":[{"name":"Add","desc":"Adds new properties.","params":[{"name":"Properties","desc":"","lua_type":"Properties<I>"}],"returns":[],"function_type":"method","since":"v1.0.0","source":{"line":64,"path":"src/WrappedInstance.lua"}},{"name":"Clean","desc":"Makes the wrapped instance unuseable and disconnects all custom signals,  \\nThis will not destroy the instance itself and not disconnect normal signals.","params":[],"returns":[{"desc":"","lua_type":"I"}],"function_type":"method","since":"v1.0.0","source":{"line":107,"path":"src/WrappedInstance.lua"}}],"properties":[{"name":"Changed","desc":"A signal that fires when __newindex successfully sets a new value   \\nArgs: ```propertyKey: any, lastValue: any, newValue: any```\\n\\n:::note\\nUse :GetPropertyChangedSignal for normal properties\\n:::","lua_type":"Signal<any, any, any>","source":{"line":49,"path":"src/WrappedInstance.lua"}},{"name":"Called","desc":"A signal that fires when a function is called from __index   \\nArgs: ```methodKey: any, args: ...any?```","lua_type":"Signal<any, ...any?>","source":{"line":57,"path":"src/WrappedInstance.lua"}}],"types":[{"name":"Properties<I>","desc":"Properties type for ```WrappedInstance:Add``` method","lua_type":"{[any]: {Property: any  }|{ Method: (self: WrappedInstance<I>, ...any?) -> ...any?}|{Event: (Signal: Signal) -> ()}}","source":{"line":37,"path":"src/WrappedInstance.lua"}}],"name":"WrappedInstance","desc":"","source":{"line":28,"path":"src/WrappedInstance.lua"}}')}}]);